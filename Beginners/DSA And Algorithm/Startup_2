Question_Name: Total Number of Coins

You have given a value V and array coins[] of size M, the task is to make the change for V cents,
given that you have an infinite supply of each of coins{coins1, coins2, ..., coinsm} valued coins. 
Find the minimum number of coins to make the change. If not possible to make change then return -1.

Input:
V = 30, M = 3, coins[] = {25, 10, 5}
Output: 2
Explanation: Use one 25 cent coin
and one 5 cent coin.

Let's Code----

#include <bits/stdc++.h>
using namespace std;

class Solution{
	public:
	int minCoins(int coins[], int M, int V) 
	{ 
	    // Your code goes here
	    int t[V+1];
	    t[0] = 0;
	    for(int i=1;i<V+1;i++){
	        t[i] = INT_MAX;
	    }
	    for(int i=1;i<V+1;i++){
	        for(int j=0;j<M;j++){
	            if(coins[j]<=i){
	                int minRes = t[i-coins[j]];
	                
	                if(minRes !=INT_MAX && minRes+1 < t[i])
	                 t[i] = minRes+1;
	            }
	        }
	    }
	    
	    if(t[V]==INT_MAX)
	    return -1;
	    
	    return t[V];
	} 
	  
};

int main() 
{
   	int t;
    cin >> t;
    while (t--)
    {
        int v, m;
        cin >> v >> m;

        int coins[m];
        for(int i = 0; i < m; i++)
        	cin >> coins[i];

	    Solution ob;
	    cout << ob.minCoins(coins, m, v) << "\n";
	     
    }
    return 0;
}
